LLVM File
  LLVMEntityImpl(ENTITY)
    PsiElement(target)('target')
    PsiElement(triple)('triple')
    PsiElement(OPERATOR)('=')
    PsiElement(STRING)(''qwe'')
  LLVMEntityImpl(ENTITY)
    PsiElement(attributes)('attributes')
    PsiElement(ATT_GROUP_ID)('#1')
    PsiElement(OPERATOR)('=')
    PsiElement(LEFT_BRACE)('{')
    LLVMFunctionAttributeImpl(FUNCTION_ATTRIBUTE)
      PsiElement(alwaysinline)('alwaysinline')
    PsiElement(RIGHT_BRACE)('}')
  LLVMEntityImpl(ENTITY)
    PsiElement(COMDAT_IDENTIFIER)('$a')
    PsiElement(OPERATOR)('=')
    PsiElement(keyword)('comdat')
    LLVMSelectionKindImpl(SELECTION_KIND)
      PsiElement(any)('any')
  LLVMEntityImpl(ENTITY)
    PsiElement(METADATA_IDENTIFIER)('!b')
    PsiElement(OPERATOR)('=')
    PsiElement(distinct)('distinct')
    LLVMMetadataImpl(METADATA)
      PsiElement(METADATA_STRING)('!'string'')
  LLVMEntityImpl(ENTITY)
    PsiElement(LOCAL_IDENTIFIER)('%integer')
    PsiElement(OPERATOR)('=')
    PsiElement(keyword)('type')
    LLVMPointerTypeImpl(POINTER_TYPE)
      LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
        PsiElement(TYPE_LITERAL)('i8')
      PsiElement(*)('*')
  LLVMEntityImpl(ENTITY)
    PsiElement(GLOBAL_IDENTIFIER)('@b')
    PsiElement(OPERATOR)('=')
    LLVMScopeImpl(SCOPE)
      PsiElement(global)('global')
    LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
      PsiElement(TYPE_LITERAL)('i8')
    LLVMValueImpl(VALUE)
      PsiElement(INTERGER_LITERAL)('1')
  LLVMEntityImpl(ENTITY)
    LLVMFunctionDeclarationImpl(FUNCTION_DECLARATION)
      PsiElement(declare)('declare')
      LLVMFunctionHeaderImpl(FUNCTION_HEADER)
        LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
          PsiElement(TYPE_LITERAL)('i32')
        PsiElement(GLOBAL_IDENTIFIER)('@printf')
        PsiElement(LEFT_PARENTHESIS)('(')
        LLVMParameterListImpl(PARAMETER_LIST)
          LLVMParameterImpl(PARAMETER)
            LLVMPointerTypeImpl(POINTER_TYPE)
              LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                PsiElement(TYPE_LITERAL)('i8')
              PsiElement(*)('*')
          PsiElement(,)(',')
          LLVMParameterImpl(PARAMETER)
            PsiElement(BAD_CHARACTER)('.')
            PsiElement(BAD_CHARACTER)('.')
            PsiElement(BAD_CHARACTER)('.')
        PsiElement(RIGHT_PARENTHESIS)(')')
        LLVMFunctionAttributeImpl(FUNCTION_ATTRIBUTE)
          PsiElement(ATT_GROUP_ID)('#1')
  LLVMEntityImpl(ENTITY)
    LLVMFunctionDefinitionImpl(FUNCTION_DEFINITION)
      PsiElement(define)('define')
      LLVMFunctionHeaderImpl(FUNCTION_HEADER)
        LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
          PsiElement(TYPE_LITERAL)('i8')
        PsiElement(GLOBAL_IDENTIFIER)('@add')
        PsiElement(LEFT_PARENTHESIS)('(')
        PsiElement(RIGHT_PARENTHESIS)(')')
      LLVMFunctionBodyImpl(FUNCTION_BODY)
        PsiElement(LEFT_BRACE)('{')
        LLVMBasicBlockImpl(BASIC_BLOCK)
          LLVMStatementImpl(STATEMENT)
            LLVMInstructionImpl(INSTRUCTION)
              PsiElement(ret)('ret')
              LLVMTypedValueImpl(TYPED_VALUE)
                LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                  PsiElement(TYPE_LITERAL)('i8')
                LLVMValueImpl(VALUE)
                  PsiElement(INTERGER_LITERAL)('0')
        PsiElement(RIGHT_BRACE)('}')
  PsiComment(COMMENT)(';Copied directly from the documentation')
  PsiComment(COMMENT)('; Declare the string constant as a global constant.')
  LLVMEntityImpl(ENTITY)
    PsiElement(GLOBAL_IDENTIFIER)('@.str')
    PsiElement(OPERATOR)('=')
    LLVMLinkageImpl(LINKAGE)
      PsiElement(private)('private')
    PsiElement(unnamed_addr)('unnamed_addr')
    LLVMScopeImpl(SCOPE)
      PsiElement(constant)('constant')
    LLVMArrayTypeImpl(ARRAY_TYPE)
      PsiElement(LEFT_BRACKET)('[')
      PsiElement(INTERGER_LITERAL)('13')
      PsiElement(x)('x')
      LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
        PsiElement(TYPE_LITERAL)('i8')
      PsiElement(RIGHT_BRACKET)(']')
    LLVMValueImpl(VALUE)
      PsiElement(CHAR_ARRAY_LITERAL)('c'hello world\0A\00'')
  PsiComment(COMMENT)('; External declaration of the puts function')
  LLVMEntityImpl(ENTITY)
    LLVMFunctionDeclarationImpl(FUNCTION_DECLARATION)
      PsiElement(declare)('declare')
      LLVMFunctionHeaderImpl(FUNCTION_HEADER)
        LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
          PsiElement(TYPE_LITERAL)('i32')
        PsiElement(GLOBAL_IDENTIFIER)('@puts')
        PsiElement(LEFT_PARENTHESIS)('(')
        LLVMParameterListImpl(PARAMETER_LIST)
          LLVMParameterImpl(PARAMETER)
            LLVMPointerTypeImpl(POINTER_TYPE)
              LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                PsiElement(TYPE_LITERAL)('i8')
              PsiElement(*)('*')
            LLVMParameterAttributeImpl(PARAMETER_ATTRIBUTE)
              PsiElement(nocapture)('nocapture')
        PsiElement(RIGHT_PARENTHESIS)(')')
        LLVMFunctionAttributeImpl(FUNCTION_ATTRIBUTE)
          PsiElement(nounwind)('nounwind')
  PsiComment(COMMENT)('; Definition of main function')
  LLVMEntityImpl(ENTITY)
    LLVMFunctionDefinitionImpl(FUNCTION_DEFINITION)
      PsiElement(define)('define')
      LLVMFunctionHeaderImpl(FUNCTION_HEADER)
        LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
          PsiElement(TYPE_LITERAL)('i32')
        PsiElement(GLOBAL_IDENTIFIER)('@main')
        PsiElement(LEFT_PARENTHESIS)('(')
        PsiElement(RIGHT_PARENTHESIS)(')')
      LLVMFunctionBodyImpl(FUNCTION_BODY)
        PsiElement(LEFT_BRACE)('{')
        PsiComment(COMMENT)('; i32()*')
        PsiComment(COMMENT)('; Convert [13 x i8]* to i8  *...')
        LLVMBasicBlockImpl(BASIC_BLOCK)
          LLVMStatementImpl(STATEMENT)
            PsiElement(LOCAL_IDENTIFIER)('%cast210')
            PsiElement(OPERATOR)('=')
            LLVMInstructionImpl(INSTRUCTION)
              PsiElement(getelementptr)('getelementptr')
              LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                PsiElement(TYPE_LITERAL)('i8')
              PsiElement(,)(',')
              LLVMTypedValueImpl(TYPED_VALUE)
                LLVMPointerTypeImpl(POINTER_TYPE)
                  LLVMArrayTypeImpl(ARRAY_TYPE)
                    PsiElement(LEFT_BRACKET)('[')
                    PsiElement(INTERGER_LITERAL)('13')
                    PsiElement(x)('x')
                    LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                      PsiElement(TYPE_LITERAL)('i8')
                    PsiElement(RIGHT_BRACKET)(']')
                  PsiElement(*)('*')
                LLVMValueImpl(VALUE)
                  PsiElement(GLOBAL_IDENTIFIER)('@.str')
              PsiElement(,)(',')
              LLVMTypedValueImpl(TYPED_VALUE)
                LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                  PsiElement(TYPE_LITERAL)('i64')
                LLVMValueImpl(VALUE)
                  PsiElement(INTERGER_LITERAL)('0')
              PsiElement(,)(',')
              LLVMTypedValueImpl(TYPED_VALUE)
                LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                  PsiElement(TYPE_LITERAL)('i64')
                LLVMValueImpl(VALUE)
                  PsiElement(INTERGER_LITERAL)('0')
          PsiComment(COMMENT)('; Call puts function to write out the string to stdout.')
          LLVMStatementImpl(STATEMENT)
            LLVMInstructionImpl(INSTRUCTION)
              PsiElement(call)('call')
              LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                PsiElement(TYPE_LITERAL)('i32')
              LLVMValueImpl(VALUE)
                PsiElement(GLOBAL_IDENTIFIER)('@puts')
              PsiElement(LEFT_PARENTHESIS)('(')
              LLVMArgumentListImpl(ARGUMENT_LIST)
                LLVMArgumentImpl(ARGUMENT)
                  LLVMPointerTypeImpl(POINTER_TYPE)
                    LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                      PsiElement(TYPE_LITERAL)('i8')
                    PsiElement(*)('*')
                  LLVMValueImpl(VALUE)
                    PsiElement(LOCAL_IDENTIFIER)('%cast210')
              PsiElement(RIGHT_PARENTHESIS)(')')
          LLVMStatementImpl(STATEMENT)
            LLVMInstructionImpl(INSTRUCTION)
              PsiElement(ret)('ret')
              LLVMTypedValueImpl(TYPED_VALUE)
                LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
                  PsiElement(TYPE_LITERAL)('i32')
                LLVMValueImpl(VALUE)
                  PsiElement(INTERGER_LITERAL)('0')
        PsiElement(RIGHT_BRACE)('}')
  PsiComment(COMMENT)('; Named metadata')
  LLVMEntityImpl(ENTITY)
    PsiElement(METADATA_IDENTIFIER)('!1')
    PsiElement(OPERATOR)('=')
    LLVMMetadataImpl(METADATA)
      PsiElement(!{)('!{')
      LLVMMetadataImpl(METADATA)
        LLVMTypedValueImpl(TYPED_VALUE)
          LLVMPrimitiveTypeImpl(PRIMITIVE_TYPE)
            PsiElement(TYPE_LITERAL)('i32')
          LLVMValueImpl(VALUE)
            PsiElement(INTERGER_LITERAL)('42')
      PsiElement(RIGHT_BRACE)('}')
  LLVMEntityImpl(ENTITY)
    PsiElement(METADATA_IDENTIFIER)('!foo')
    PsiElement(OPERATOR)('=')
    LLVMMetadataImpl(METADATA)
      PsiElement(!{)('!{')
      LLVMMetadataImpl(METADATA)
        PsiElement(METADATA_IDENTIFIER)('!1')
      PsiElement(,)(',')
      LLVMMetadataImpl(METADATA)
        PsiElement(METADATA_IDENTIFIER)('!1')
      PsiElement(RIGHT_BRACE)('}')